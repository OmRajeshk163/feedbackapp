{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getReviewerFeedback",
    "fullyQualifiedName": "reviewerObj.getReviewerFeedback",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "ReviewerFeedback",
    "collectionId": "ReviewerFeedback_reviewerObj",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  const feedbackList = getFeedback.data;\n  const selectedCategory = kraCategories.selectedOptionValue;\n  const toId = toName.selectedOptionValue;\n  const reviewerId = reviewerName.selectedOptionValue;\n  const feedback = feedbackList.filter(feedback => feedback.from_employee === reviewerId && feedback.to_employee === toId && feedback.category === selectedCategory && [\"reviewer\"].includes(feedback.feedback_type) && feedback.cycle === feedbackObj.getRDateForCycle() && reviewerObj.feedbackId == feedback[0]?.id);\n  console.log(\"feedbackfeedback\", feedback[0], reviewerObj.feedbackId);\n  return feedback[0] ?? ({\n    rating: 0,\n    feedback_continue: \"\",\n    feedback_more_of: \"\"\n  });\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  const feedbackList = getFeedback.data;\n  const selectedCategory = kraCategories.selectedOptionValue;\n  const toId = toName.selectedOptionValue;\n  const reviewerId = reviewerName.selectedOptionValue;\n  const feedback = feedbackList.filter(feedback => feedback.from_employee === reviewerId && feedback.to_employee === toId && feedback.category === selectedCategory && [\"reviewer\"].includes(feedback.feedback_type) && feedback.cycle === feedbackObj.getRDateForCycle() && reviewerObj.feedbackId == feedback[0]?.id);\n  console.log(\"feedbackfeedback\", feedback[0], reviewerObj.feedbackId);\n  return feedback[0] ?? ({\n    rating: 0,\n    feedback_continue: \"\",\n    feedback_more_of: \"\"\n  });\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "ReviewerFeedback_reviewerObj.getReviewerFeedback",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_636cc7790c3174227f411977"
}