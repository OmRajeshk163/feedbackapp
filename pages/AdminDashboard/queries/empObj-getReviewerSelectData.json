{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getReviewerSelectData",
    "fullyQualifiedName": "empObj.getReviewerSelectData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "AdminDashboard",
    "collectionId": "AdminDashboard_empObj",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let empData = [];\n  const uniqueIds = [];\n  getEmployees.data.map(employee => {\n    getEmployees.data.map(emp => {\n      if (employee.id === emp.reviewer) {\n        empData = [...empData, {\n          label: employee.name,\n          value: employee.id\n        }];\n      }\n    });\n  });\n  console.log(\"empDataempData\", empData);\n  const uniqueReviewers = empData.filter(element => {\n    const isDuplicate = uniqueIds.includes(element.value);\n    if (!isDuplicate) {\n      uniqueIds.push(element.value);\n      return true;\n    }\n    return false;\n  });\n  return uniqueReviewers;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  let empData = [];\n  const uniqueIds = [];\n  getEmployees.data.map(employee => {\n    getEmployees.data.map(emp => {\n      if (employee.id === emp.reviewer) {\n        empData = [...empData, {\n          label: employee.name,\n          value: employee.id\n        }];\n      }\n    });\n  });\n  console.log(\"empDataempData\", empData);\n  const uniqueReviewers = empData.filter(element => {\n    const isDuplicate = uniqueIds.includes(element.value);\n    if (!isDuplicate) {\n      uniqueIds.push(element.value);\n      return true;\n    }\n    return false;\n  });\n  return uniqueReviewers;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "AdminDashboard_empObj.getReviewerSelectData",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_6361ef20dfa75b056e2ed6d1"
}