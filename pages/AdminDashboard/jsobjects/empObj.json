{
  "unpublishedCollection": {
    "name": "empObj",
    "pageId": "AdminDashboard",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\t\tgetEmpOptions: () => {\n\t\t//write code here\n\t\tconst getOptions=getEmployees.data.map(emp=>({label:emp.name,value:emp.id}));\n\t\treturn getOptions;\n\t},\n\tgetEmployeeData:()=>{\n\t\tconst empData=getEmployees.data.map(employee=>{\n\t\t\treturn {\n\t\t\t\t...employee,\n\t\t\t\treviewerName:getEmployees.data.find(emp=>emp.id===employee.reviewer)?.name??\"\"\n\t\t\t}\n\t\t});\n\t\tconsole.log(\"empDataempData\",empData)\n\t\treturn empData;\n\t},\n\t\n\tonSuccessfulCreate: () => {\n\t\tgetEmployees.run(() => {\n\t\t\tshowAlert(\"Created Successfully\", 'success');\n\t\t\tcloseModal('createEmployeeModal');\n\t\t});\n\t},\n\tonSuccessfulUpdate: () => {\n\t\tgetEmployees.run(() => {\n\t\t\tshowAlert(\"Updated Successfully\", 'success');\n\t\t\tcloseModal('updateEmployeeModal');\n\t\t});\n\t},\n\tonDelete: () => {\n\t\t//getReviewers.run();\n\t\t\n\t\ttry{\n\t\t\tgetReference.run(()=>{\n\t\t\t\tgetFeedback.run();\n\t\t\t\tconst isReviewer=getEmployees.data.some(rev=>rev.reviewer===employeeTable.selectedRow.id);\n\t\t\t\tconsole.log(\"isReviewerisReviewer\",getEmployees.data,getReference.data,isReviewer,employeeTable.selectedRow.name)\n\t\t\t\tif(getReference.data.length===0 && !isReviewer){\n\t\t\t\t\tdeleteEmployee.run(()=>{\n\t\t\t\t\t\tgetEmployees.run();\n\t\t\t\t\t\tshowAlert(\"Deleted Successfully\", 'success');\n\t\t\t\t\t\tcloseModal('deleteEmpModal');\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t\tif(isReviewer){\n\t\t\t\t\t\tshowAlert(`Please remove the references of ${employeeTable.selectedRow.name} first and then delete the record`, 'error');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tshowAlert(`Please Delete feedbacks of ${employeeTable.selectedRow.name} first and then delete the record`, 'error');\n\t\t\t\t\t}\n\t\t\t\t\tcloseModal('deleteEmpModal');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n     }catch(error){\n\t\t\t\tshowAlert(\"Failed to delete\", 'error');\n\t\t\t\tcloseModal('deleteEmpModal');\n     }\n\n/*\n\t\tconst isReviewer = getReviewers.data.find((reviewer) => reviewer.empid == employeeTable.selectedRow.empid);\n\t\tif(isReviewer === undefined){\n\t\t\tdeleteEmployee.run();\n\t\t\tgetEmployees.run();\n\t\t\tshowAlert(\"Deleted Successfully\", 'success');\n\t\t\tcloseModal('deleteEmpModal');\n\t\t}\n\t\telse if(isReviewer !== undefined){\n\t\t\tshowAlert(\"Delete records that is that the selected data is referenced in\", 'error');\n\t\t\tcloseModal('deleteEmpModal');\n\t\t}\n\t\telse {\n\t\t\tshowAlert(\"Failed to delete\", 'error');\n\t\t\tcloseModal('deleteEmpModal');\n\t\t}\n*/\n\t},\n}",
    "variables": [],
    "userPermissions": []
  },
  "id": "AdminDashboard_empObj",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_6361ef20dfa75b056e2ed725"
}