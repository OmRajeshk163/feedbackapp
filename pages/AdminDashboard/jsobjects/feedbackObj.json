{
  "unpublishedCollection": {
    "name": "feedbackObj",
    "pageId": "AdminDashboard",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tgetTableValue: () => {\n\t\tvar to_emp;\n\t\tconsole.log(\"thevaluessss\",fromEmpSelect.selectedOptionValue,toEmpSelect.selectedOptionValue,\n\t\t\t\t\t\t\t\tkraSelect.selectedOptionValue,cycleSelect.selectedOptionValue,\n\t\t\t\t\t\t\t\treviewerSelect.selectedOptionValue);\n\t\tif(fromEmpSelect.selectedOptionValue.length===0&&\n\t\t\t toEmpSelect.selectedOptionValue.length===0&&\n\t\t\t cycleSelect.selectedOptionValue.length===0&&\n\t\t\t kraSelect.selectedOptionValue.length===0\n\t\t\t ){\n\t\t\t\t return getFeedback.data.map(feed => ({\n\t\t\t\t\tFrom_name: getEmployees.data.find(emp => (feed.from_employee == emp.id)).name,\n\t\t\t\t\tTo_name: (to_emp = getEmployees.data.find(emp => (feed.to_employee == emp.id))) != undefined?to_emp.name:NaN,\n\t\t\t\t\tCategory: getKraCategories.data.find(kra => (feed.category == kra.id)).name,\n\t\t\t\t\tFeedback_continue: feed.feedback_continue,\n\t\t\t\t\tFeedback_can_do_more: feed.feedback_more_of,\n\t\t\t\t\tRating: feed.rating,\n\t\t\t\t\tFeedback_type: feed.feedback_type,\n\t\t\t\t\tCycle: feed.cycle\n\t\t\t\t}));\n\t\t\t }else{\n\t\t\t\t const categories=getKraCategories.data;\n\t\t\t\t const employees=getEmployees.data;\n\t\t\t\t const tableData=getFeedback.data.map(feed =>{\n\t\t\t\t\t if(feed.from_employee==fromEmpSelect.selectedOptionValue &&\n\t\t\t\t\t\t feed.to_employee==toEmpSelect.selectedOptionValue&&\n\t\t\t\t\t\t feed.category==kraSelect.selectedOptionValue){\n\t\t\t\t \t\t\tconsole.log(\"thethattteee\",employees.find(emp=>emp.id==feed.from_employee)?.name)\n\t\t\t\t\t\t return{\n\t\t\t\t\t\t\t\tFrom_name: getEmployees.data.find(emp => (feed.from_employee == emp.id)).name,\n\t\t\t\t\t\t\t\tTo_name: (to_emp = getEmployees.data.find(emp => (feed.to_employee == emp.id))) != undefined?to_emp.name:NaN,\n\t\t\t\t\t\t\t\tCategory: getKraCategories.data.find(kra => (feed.category == kra.id)).name,\n\t\t\t\t\t\t\t\tFeedback_continue: feed.feedback_continue,\n\t\t\t\t\t\t\t\tFeedback_can_do_more: feed.feedback_more_of,\n\t\t\t\t\t\t\t\tRating: feed.rating,\n\t\t\t\t\t\t\t\tFeedback_type: feed.feedback_type,\n\t\t\t\t\t\t\t\tCycle: feed.cycle\n\t\t\t\t\t\t}\n\t\t\t\t\t }\n\t\t\t\t\t}).filter(e=>e);\n\t\t\t\t\t\t console.log(\"heretableDataInn\",tableData)\n\t\t\t\t \n\t\t\t\t return tableData \n\t\t\t }\n\t},\n\tgetCycleOption:()=>{\n\t\tlet cycleOptions=[];\n\t\tconst date=new Date();\n\t\tconst CurrentYear=date.getFullYear();\n\t\t[CurrentYear-2,CurrentYear-1,CurrentYear].map(year=>{\n\t\t\tcycleOptions.push({label:`Oct ${year}`,value:`oct${year}`},{label:`Jun ${year}`,value:`jun${year}`});\n\t\t});\n\t\treturn cycleOptions;\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ],
    "userPermissions": []
  },
  "id": "AdminDashboard_feedbackObj",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_63844cf1fa57b54aac1bdd17"
}