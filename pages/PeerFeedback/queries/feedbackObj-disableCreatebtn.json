{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "disableCreatebtn",
    "fullyQualifiedName": "feedbackObj.disableCreatebtn",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "PeerFeedback",
    "collectionId": "PeerFeedback_feedbackObj",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  const currentFeedBack = appsmith.store.peerfeedback.id;\n  const selfId = feedbackToName.selectedOptionValue;\n  console.log(\"feedbacfeedbacksksselfId\", selfId);\n  if (selfId.length == 0) {\n    return true;\n  }\n  console.log(\"isFeedbackPostedoutt\", currentFeedBack == undefined, currentFeedBack.length == 0);\n  if (ContDoInput.text.length == 0 || candoInput.text.length == 0) {\n    return true;\n  }\n  if (currentFeedBack == undefined || currentFeedBack.length == 0) {\n    return true;\n  } else {\n    const feedbacks = getFeedback.data.filter(fdbk => fdbk.from_employee == PeerName.selectedOptionValue && fdbk.feedback_type == \"peer\" && fdbk.cycle === feedbackObj.getDateForCycle() && fdbk.to_employee === feedbackToName.selectedOptionValue);\n    const isFeedbackPosted = feedbacks.some(feedback => feedback.category == currentFeedBack);\n    console.log(\"isFeedbackPosted\", feedbacks, isFeedbackPosted);\n    return isFeedbackPosted;\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  const currentFeedBack = appsmith.store.peerfeedback.id;\n  const selfId = feedbackToName.selectedOptionValue;\n  console.log(\"feedbacfeedbacksksselfId\", selfId);\n  if (selfId.length == 0) {\n    return true;\n  }\n  console.log(\"isFeedbackPostedoutt\", currentFeedBack == undefined, currentFeedBack.length == 0);\n  if (ContDoInput.text.length == 0 || candoInput.text.length == 0) {\n    return true;\n  }\n  if (currentFeedBack == undefined || currentFeedBack.length == 0) {\n    return true;\n  } else {\n    const feedbacks = getFeedback.data.filter(fdbk => fdbk.from_employee == PeerName.selectedOptionValue && fdbk.feedback_type == \"peer\" && fdbk.cycle === feedbackObj.getDateForCycle() && fdbk.to_employee === feedbackToName.selectedOptionValue);\n    const isFeedbackPosted = feedbacks.some(feedback => feedback.category == currentFeedBack);\n    console.log(\"isFeedbackPosted\", feedbacks, isFeedbackPosted);\n    return isFeedbackPosted;\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "PeerFeedback_feedbackObj.disableCreatebtn",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_6364b7ba168691232687a068"
}