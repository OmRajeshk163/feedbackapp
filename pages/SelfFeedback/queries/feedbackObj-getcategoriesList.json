{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getcategoriesList",
    "fullyQualifiedName": "feedbackObj.getcategoriesList",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "SelfFeedback",
    "collectionId": "SelfFeedback_feedbackObj",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  const selfId = selfName.selectedOptionValue;\n  const categories = getKraCategories.data;\n  const feedbacks = getFeedback.data.filter(fdbk => fdbk.from_employee == selfId && fdbk.feedback_type == \"self\");\n  const custCategories = categories.map(category => {\n    const continueDoing = feedbacks.find(feedback => feedback.category === category.id)?.feedback_continue ?? \"N/A\";\n    const canDo = feedbacks.find(feedback => feedback.category === category.id)?.feedback_more_of ?? \"N/A\";\n    const rating = feedbacks.find(feedback => feedback.category === category.id)?.rating ?? 0;\n    const feedbackid = feedbacks.find(feedback => feedback.category === category.id)?.id ?? 0;\n    const cycle = feedbacks.find(feedback => feedback.category === category.id)?.cycle ?? 0;\n    return {\n      name: category.name,\n      description: category.description,\n      continueDoing: continueDoing,\n      cando: canDo,\n      rating: rating,\n      id: category.id,\n      feedbackid: feedbackid,\n      cycle: cycle\n    };\n  });\n  console.log(\"feedbacfeedbacksks\", custCategories);\n  return custCategories;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  const selfId = selfName.selectedOptionValue;\n  const categories = getKraCategories.data;\n  const feedbacks = getFeedback.data.filter(fdbk => fdbk.from_employee == selfId && fdbk.feedback_type == \"self\");\n  const custCategories = categories.map(category => {\n    const continueDoing = feedbacks.find(feedback => feedback.category === category.id)?.feedback_continue ?? \"N/A\";\n    const canDo = feedbacks.find(feedback => feedback.category === category.id)?.feedback_more_of ?? \"N/A\";\n    const rating = feedbacks.find(feedback => feedback.category === category.id)?.rating ?? 0;\n    const feedbackid = feedbacks.find(feedback => feedback.category === category.id)?.id ?? 0;\n    const cycle = feedbacks.find(feedback => feedback.category === category.id)?.cycle ?? 0;\n    return {\n      name: category.name,\n      description: category.description,\n      continueDoing: continueDoing,\n      cando: canDo,\n      rating: rating,\n      id: category.id,\n      feedbackid: feedbackid,\n      cycle: cycle\n    };\n  });\n  console.log(\"feedbacfeedbacksks\", custCategories);\n  return custCategories;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "SelfFeedback_feedbackObj.getcategoriesList",
  "deleted": false,
  "gitSyncId": "6361ef20dfa75b056e2ed6b2_6363616abaf07e59ff350a58"
}